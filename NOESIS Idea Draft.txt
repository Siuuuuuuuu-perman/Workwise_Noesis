Noesis — Enhanced AI Learning Gap Solution
1. System Overview
Noesis is an AI-powered personal learning assistant that identifies skill gaps and generates dynamic,
personalized learning roadmaps for users. It leverages NVIDIA AI technologies (Nemotron, MCP, NIM)
to understand existing knowledge, map skills to career goals, identify missing skills, recommend
resources, and adapt roadmaps based on progress.
2. Purpose and Objectives
Purpose:
Bridge the learning gap between current knowledge and career aspirations and reduce skill mismatch in
education and workforce sectors.
Objectives:
 Automatically extract user skills from text, resume, or LinkedIn.
 Detect missing skills compared to desired roles.
 Recommend ranked, high-quality learning resources.
 Generate personalized, time-bound roadmaps.
 Provide interactive dashboard and feedback for tracking progress.
 Adapt dynamically to user updates (progress or new goals).
3. User Input and Output Structure
User Input Options:
 Text input: Goals and known skills.
 File upload: Resume, transcript, or LinkedIn profile.
 Optional settings: Weekly available hours, preferred platform (free/paid), target industry.
 Interactive input: Voice or chat queries for adaptive responses.
Output Examples:
Skill Gap Table:
Skill
Status
Recommendation
Python
■ Known
—
SQL
■ Missing
SQL Basics on Coursera
Tableau
■■ Partial
Tableau Project Tutorial on Udemy
Learning Roadmap Table:
Week
Topic
Resource
Goal
Estimated Hours
1
Statistics & Probability
Khan Academy
Foundation
4

2
Python Libraries
Coursera
Data Handling
5
3
SQL Basics
Coursera
Database Skills
5
4
Data Visualization
Udemy
Dashboard Creation
6
4. Backend Logic and Flow
 Receive User Input → Text, resume, LinkedIn profile.
 Preprocessing: Clean text, extract keywords, normalize skills.
 Skill Extraction (Nemotron): Semantic analysis, embedding vectors for skills.
 Target Role Mapping: Map desired role to O*NET taxonomy or industry skill database.
 Gap Detection (MCP Agents): Skill Agent, Gap Agent, Learning Agent.
 Resource Fetching Pipeline: Call educational APIs, rank and filter resources.
 Learning Roadmap Generation: Assign topics/weeks based on user availability, include mini-projects.
 Output to Frontend: Skill gaps table, roadmap table, charts, progress indicators.
Flow Diagram (Text Placeholder):
User Input → Nemotron (Skill Extraction) → MCP Agents (Gap Detection + Resource
Recommendation) → NIM Inference Services → Backend (FastAPI) → Frontend Dashboard (Tables +
Charts)
5. AI Model Integration (NVIDIA NIM + Nemotron + MCP)
 Nemotron: NLP model for extracting user skills, experience, and context from text/resume
 MCP: Orchestrates multiple agents: Skill Agent, Gap Agent, Learning Agent
 NIM: Runs inference in real-time, provides low-latency responses for each model
6. Resource Extraction Pipeline
 Detect missing skills from Gap Agent.
 Query multiple educational APIs: Coursera, edX, Udemy, Khan Academy.
 Retrieve metadata: course name, link, difficulty, duration, rating.
 Rank resources using scoring formula: Score = Relevance*0.4 + Rating*0.3 + Duration Match*0.2 +
Free/Paid Preference*0.1
 Return top-ranked resources to Learning Agent for roadmap generation.
7. Data Structure Examples
Input JSON Example:
{ "name": "User1", "goal": "Data Analyst", "known_skills": ["Python", "Excel"], "weekly_time_hours": 5,
"resume_text": "Worked in finance, familiar with data handling." }

Output JSON Example:
{ "skill_gaps": [ {"skill": "SQL", "status": "Missing", "recommendation": "SQL Basics on Coursera"},
{"skill": "PowerBI", "status": "Partial", "recommendation": "PowerBI Tutorial on edX"} ],
"learning_roadmap": [ {"week": 1, "topic": "Statistics & Probability", "resource": "Khan Academy", "goal":
"Foundation", "hours": 4}, {"week": 2, "topic": "Python Libraries", "resource": "Coursera", "goal": "Data
Handling", "hours": 5} ] }
8. Workflow Diagrams Explained in Text
 Figure 1: Noesis System Architecture - User Input → Nemotron → MCP Agents → NIM → Backend →
Frontend Dashboard
 Figure 2: Learning Path Flow - Extracted Skills → Gap Detection → Resource Query → Rank & Filter
→ Roadmap Generation → Output
9. Example User Journey
 Input: 'I am a nurse wanting to move into health data analysis. I know Excel and basic statistics.
Weekly time: 5 hours.'
 Process: Nemotron extracts skills → Excel, Statistics.
 MCP identifies missing skills → Python, SQL, Data Visualization, Epidemiology.
 Learning Agent fetches courses → Coursera Python, SQL Basics, Tableau Tutorials.
 Roadmap generated → 6 weeks, weekly goals, estimated hours.
 Output: Skill gap table + roadmap table + progress tracker.
10. Tech Stack, APIs, Libraries Used
 Frontend: Streamlit or React
 Backend: Python (FastAPI)
 Database: SQLite or PostgreSQL
 AI Models: Nemotron, MCP Agents, NIM
 APIs: Coursera, edX, Udemy, Khan Academy, O*NET
 Libraries: requests, pandas, spaCy/NLTK, JSON, matplotlib/plotly for charts
11. Future Scope
 Multilingual support for global users.
 Real-time adaptive learning based on user progress.
 Gamification elements for motivation.
 Integration with government or institutional platforms for workforce planning.
 Predictive analytics for educational trends.
 Enhanced ranking with user feedback and collaborative filtering.
